MyHD Linux Driver - Userspace Tools

To turn on color bars, first insmod the tl880 driver, then run

cd dpc; ./dpcaux 1 1 0; cd ..

The videoout program in the dpc directory switches video passthrough on/off.  So
far this only works for the MyHD MDP-110.

The firmware is not required for simple tests, but will be required later on
for anything MPEG related.  See the README file in the firmware/ directory for
more information and possible sources for firmware.

Description of tools:

audiosamples.sh
	Uses sox to convert a given audio file to multiple sample rates, for
	testing the various sample rates of the card.

regload
	Loads a dump of the TL880 register space from a file, optionally
	specifying the start address at which to load the data.
	
regloadslow
	Loads a dump of the TL880 register space from a file, optionally
	specifying the start address at which to load the data.  This version
	runs slowly at a user-specified point, to help identify the effect each
	register has as it is written.
	
regdump
	Dumps the entire 1MB register space to a file.  Note that most of the
	register space is either unused or redundant; hexdump can be used to
	filter out the redundant areas and produce an ascii file for human
	consumption.

memdump
	Dumps the 16MB memory region of the TL880 to a file.

memload
	Loads all or part of the TL880's 16MB memory region from a file.

readmem
	Reads a 4-byte value from TL880 memory.

writemem
	Writes a 4-byte value to TL880 memory.
	
readreg
	Reads the value of a register and prints it to stdout.  Parameter is in
	hexadecimal.  Uses mmap() and dereferences a pointer.  The mmap()
	interface will go away in the future in favor of an ioctl().
	
writereg
	Writes a value to a register.  Parameters are in hexadecimal.  Uses
	mmap() and dereferences a pointer.  The mmap() interface will go away in
	the future in favor of an ioctl().
	
setbits
	Command line interface to the set_bits() function.
	
write4reg
	Writes four registers at once; useful for writing parsed register dumps
	to the TL880 register space.
	
iocsetvip
	Sets the VIP state (0, 1, or 2).  I don't know what that means,
	exactly....  Does something to the GPIO regs (0x10194,0x10198).
	
iocreadreg
	Same thing as readreg but uses an ioctl() instead of mmap() and
	dereference.  The ioctl() interface will be preferred in the future.
	
iocwritereg
	Same thing as writereg but uses an ioctl() instead of mmap() and
	dereference.  The ioctl() interface will be preferred in the future.
	
randram
	Randomizes all or part of the TL880 memory (to see if anything happens).

striperam
	Sets all or part of the TL880 memory to alternating pattern.

rampram
	Sets all or part of the TL880 to a 1024-byte long ramp from 0x00-0xff.

cursor
	Uploads and displays a simple cursor on the TL880 screen, demonstrating
	the TL880 chip's alpha blending abilities.

randosd
	Randomizes the OSD context registers.

osdtest
	Tests the current knowledge of the TL880 OSD system by turning on the OSD
	and pointing it at unknown data on the card.  It draws pretty collors.

osdimage
	Loads raw data from a file and displays it on the OSD.  This does not
	actually display images (yet).  Give it a shot.

rgb2ypbpr
	Converts an RGB[A] value to an AYPbPr value for use with registers
	10140-1017c (the cursor color palette).  This is a utility for use in
	command-line testing and shell scripts.

hexcount
	Counts in hexadecimal.  This is a utility to replace "seq" for use in
	shell scripts.

setalpha
	Sets every fourth bit of the tl880 framebuffer to 0xff - see source.

ioctl
	Facilitates testing of tl880 ioctls and tl880/i2c driver interfaces
	(such as tuner, demod, etc.).

testdpcint.sh
	Enables video output and activates DPC interrupts to test the DPC
	interrupt handler.  You need to compile all the other tools first to use
	this script.

dpc2rand.sh
	Randomizes the DPC2 registers (see tl880doc.txt).

dpc2dump.sh
	Dumps the current DPC2 register state to a shell script using
	./iocwritereg.

osd.sh
	Turns on the display and runs some OSD tests.

testioctl.sh
	Tests ioctl passing by attempting to set the tuner to channel 3 and
	displaying status in the system log.


vim: tw=80

