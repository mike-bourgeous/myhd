MyHD driver and utility package  --  http://myhd.sourceforge.net/
Copyright 2003, Mike Bourgeous (some 2003, Mark Lehrer; see driver/README)

debuglogs/
	Output from SoftICE register dumps and so on (useless without parsing)
doc/
	What I know about the chip so far
driver/
	Kernel module (no video capture yet - simply allows non-root to access
	the card and enables I2C)
tools/
	Use these to "play" with the card and figure out how stuff works.

There are step-by-step instructions how to compile the driver and run some tests
at http://myhd.sourceforge.net/howtohelp.php.

For more information, please view the mailing list archives.  Also read all the
README files in this driver distribution (find . -name README).  Reading source
code is also good.  The tl880kern.c file has the most comments, if you were
wondering.

Remember that this driver has no video capture capability.  The kernel module
creates three devices per TL880 card in /dev/tl880 to allow all users to mmap
the memory regions of the TL880, or use the ioctl interface to control the card.
The tools are then used to upload the firmware, set external sync, and turn on
color bars.  That's all that the driver can do so far.  There is also I2C bus
support.

To test the I2C bus(es), you will need the lm_sensors package.  Load the
i2c-dev, i2c-algo-bit, and tl880.o kernel modules, then run i2cdetect for each
bus displayed in the kernel message log (each card has a different number of
buses).  If you have any output beside all XX's, note the address and bus
number, and run i2cdump [bus] [address].  For example, the NXT2000 on the MyHD
has address 0x14 on bus 1, so i2cdetect 1 shows a response from address 0xa, and
i2cdump 1 0xa shows the registers of the NXT2000.


Still needed:

Someone who can write a Windows program to dump the register space and find out
where the PCI device's memory ranges are mapped.

Someone with PCI DMA experience.

A parsing tool for SoftICE logs/register dumps (this one is less important).

Someone who can figure out how to use WinDBG to peer into the Windows drivers.

Lots and lots of time.



vim: tw=80

